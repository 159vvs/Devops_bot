services:
    bot:
      build: .
      image: bot_image
      container_name: bot
      depends_on:
        - db
      volumes:
        - pg_logs:/var/log/postgresql
      env_file:
        - .env

    db:
      image: db_image
      container_name: db
      environment:
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        POSTGRES_DB: ${DB_DATABASE}
        POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 scram-sha-256"
        POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      command: |
        postgres
        -c wal_level=replica
        -c hot_standby=on
        -c max_wal_senders=10
        -c max_replication_slots=10
        -c hot_standby_feedback=on
        -c log_replication_commands=on
        -c log_directory=/var/log/postgresql/
        -c log_filename=postgres.log
        -c logging_collector=on
      ports:
        - "5432:5432"
      volumes:
        - pg_logs:/var/log/postgresql
      env_file:
        - .env

    db_repl:
      image: db_repl_image
      container_name: db_repl
      environment:
        PGUSER: ${DB_REPL_USER}
        PGPASSWORD: ${DB_REPL_PASSWORD}
      ports:
        - "5433:5432"
      volumes:
        - pg_logs:/var/log/postgresql
      env_file:
        - .env
      depends_on:
        - db

volumes:
  pg_logs:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/tmp'